# Food, grub or foodgasm: the cook make this, diner consumes
type Dish {
    dish_id: ID!
    cook_id: ID!
    title: String!
    description: String
    style: String
    glutten_allergy: Boolean
    soy_allergy: Boolean
    milk_allergy: Boolean
    peanuts_allergy: Boolean
    shrimp_allergy: Boolean
    # Can be a comma separated list of allergies
    other_allergy: String
    attachment: [String]
    minimun_diners: Int
    maximum_diners: Int
    # $10.00 = 1000
    price: Int
    minimum_cancel_time: String
    required_tools: [String]
    disabled:  Boolean
	reasons: String
    review: Stars
    createdAt: String
    updated_at: String
}

type Query {
    dish(dish_id:ID!):[Dish]
    dishesByCook(cook_id:ID!):[Dish]
    dishesByReview(review:Stars!):[Dish]
    dishes:[Dish]
}

type Mutation {
    dishCreate(input:DishCreate!):[Dish]
    dishUpdate(input:DishUpdate):[Dish]
    dishDisable(input:DishDisable): [Dish]
}

input DishUpdateReview {
    dish_id: ID!
    review: Stars
}

input DishCreate {
    cook_id: ID!
    title: String!
    description: String
    style: String
    glutten_allergy: Boolean
    soy_allergy: Boolean
    milk_allergy: Boolean
    peanuts_allergy: Boolean
    shrimp_allergy: Boolean
    other_allergy: String
    attachment: [String]
    minimun_diners: Int
    maximum_diners: Int
    price: Int
    minimum_cancel_time: String
    required_tools: [String]
}

input DishUpdate {
    dish_id: ID!
    cook_id: ID!
    title: String!
    description: String
    style: String
    glutten_allergy: Boolean
    soy_allergy: Boolean
    milk_allergy: Boolean
    peanuts_allergy: Boolean
    shrimp_allergy: Boolean
    other_allergy: Boolean
    attachment: [String]
    minimun_diners: Int
    maximum_diners: Int
    price: Int
    minimum_cancel_time: String
    required_tools: [String]
}

input DishDisable {
    dish_id: ID!
    disabled:  Boolean
	reasons: String!
}